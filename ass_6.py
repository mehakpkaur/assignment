# -*- coding: utf-8 -*-
"""Untitled11.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xEtk24E5g9qXHhD8oRreb5GIjc9Rk_J_
"""

import numpy as np
import matplotlib.pyplot as plt
M = float(input("Enter the mathematical operation"))
x = np.linspace(-10,10, num = 100)
y1 = M*x*x
y2 = M * np.sin(x)
plt.plot(x,y1, label = 'y = m.x^2', color = 'r', linestyle = '--')
plt.plot(x,y2, label = 'y = m.sin(x)', color = 'b', linestyle = ':')
plt.legend()
plt.grid()
plt.title("Mathematical Functions")
plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

data = {"Subject": ["Math", "Science", "English", "History", "Computer"],
        "Score": [85, 78, 92, 74, 88]}
df = pd.DataFrame(data)
sns.set_style("whitegrid")

plt.figure(figsize=(8, 5))
ax = sns.barplot(x="Subject", y="Score", data=df, palette="husl")


for p in ax.patches:
    ax.annotate(f"{p.get_height()}",
                (p.get_x() + p.get_width() / 2, p.get_height()),
                ha='center', va='bottom', fontsize=12, fontweight='bold', color='black')


plt.title("Bar Plot")
plt.xlabel("Subject")
plt.ylabel("Score")
plt.grid()
plt.show()

import numpy as np
import matplotlib.pyplot as plt

r_no = 102317094
np.random.seed(r_no)

data = np.random.randn(50)


fig,ax = plt.subplots(2,2,figsize=(10, 8))

cum_sum = np.cumsum(data)
ax[0][0].plot(cum_sum, marker = 'o', linestyle = '--', color = 'b')
ax[0][0].set_title("Cumulative Sum Line Plot")
ax[0][0].set_xlabel("Index")
ax[0][0].set_ylabel("Cumulative Sum")
ax[0][0].grid(True, linestyle ='--', alpha = 0.5)

x_values = np.linspace(0,10,50)
y_values = data *10
ax[0][1].scatter(x_values,y_values, color = 'r', alpha = 0.7 )
ax[0][1].set_title("Scatter Plot with Random Noise")
ax[0][1].set_xlabel("X Values")
ax[0][0].set_ylabel("Random Noise")
ax[0][0].grid(True, linestyle ='--', alpha = 0.6)

ax[1][0].axis("off")
ax[1][1].axis("off")
plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
# Load the dataset
url = 'https://raw.githubusercontent.com/AnjulaMehto/MCA/main/company_sales_data.csv'
df = pd.read_csv(url)
#(1)
sns.set_style("whitegrid")
plt.figure(figsize = (10,6))
sns.lineplot(x = 'month_number', y= 'total_profit', data = df, marker = 'o', color = 'b')
plt.title('Total Profit Over Months')
plt.xlabel('Month Number')
plt.ylabel('Total Profit')
plt.xticks(df['month_number'])
plt.show()

#(2)
df_melted = df.melt(id_vars=['month_number'],
                    value_vars=['facecream', 'facewash', 'toothpaste', 'bathingsoap', 'shampoo', 'moisturizer'],
                    var_name='Product',
                    value_name='Sales')

plt.figure(figsize =(12,8))
sns.lineplot(x = 'month_number', y ='Sales', hue = 'Product', data = df_melted, marker = 'o')
plt.title('Sales Data For all Products Over Months')
plt.xlabel('Month Number')
plt.ylabel('Sales')
plt.legend(title = 'Product')
plt.show()

#(3)
features = df.columns.difference(['month_number'])

for feature in features:
  plt.figure(figsize =(10,6))
  sns.barplot(x = 'month_number', y =feature, data = df, palette = 'viridis')
  plt.title("feature capitalize over months")
  plt.xlabel('Month Number')
  plt.ylabel(feature.capitalize())
  plt.show()